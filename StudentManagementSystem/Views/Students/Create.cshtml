@model StudentManagementSystem.Models.Student
@using StudentManagementSystem.Models

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Student</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="FullName" class="control-label"></label>
                <input asp-for="FullName" class="form-control" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control" type="date" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Gender" class="control-label"></label>
                <select asp-for="Gender" class="form-control" asp-items="@Html.GetEnumSelectList<Gender>()">
                    <option value="">-- Select Gender --</option>
                </select>
                <span asp-validation-for="Gender" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">Upload Profile Image</label>
                <input type="file" class="form-control" id="imageInput" accept="image/*" />
            </div>
            <div class="mt-3">
                <img id="previewImage" style="max-width: 200px; display:none;" class="img-thumbnail" />
            </div>
            <!-- Cropper Modal -->
            <div id="cropperModal" class="modal fade" tabindex="-1" role="dialog">
              <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title">Crop Image</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body text-center">
                    <img id="cropperImage" style="max-width: 100%;" />
                  </div>
                  <div class="modal-footer">
                    <button type="button" id="cropButton" class="btn btn-primary">Crop & Save</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                  </div>
                </div>
              </div>
            </div>
            <input type="hidden" id="croppedImageData" name="CroppedImageData" />

            <div class="form-group mt-3">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet" />
    <script>
        let cropper;
        const imageInput = document.getElementById('imageInput');
        const previewImage = document.getElementById('previewImage');
        const cropperImage = document.getElementById('cropperImage');
        const croppedImageData = document.getElementById('croppedImageData');

        imageInput.addEventListener('change', function (e) {
            const file = e.target.files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = function (event) {
                cropperImage.src = event.target.result;
                const modal = new bootstrap.Modal(document.getElementById('cropperModal'));
                modal.show();

                modal._element.addEventListener('shown.bs.modal', () => {
                    cropper = new Cropper(cropperImage, {
                        aspectRatio: 1,
                        viewMode: 1,
                        movable: true,
                        zoomable: true
                    });
                });

                modal._element.addEventListener('hidden.bs.modal', () => {
                    cropper.destroy();
                    cropper = null;
                });
            };
            reader.readAsDataURL(file);
        });

        document.getElementById('cropButton').addEventListener('click', () => {
            const canvas = cropper.getCroppedCanvas({ width: 200, height: 200 });
            const base64 = canvas.toDataURL("image/png");

            previewImage.src = base64;
            previewImage.style.display = "block";
            croppedImageData.value = base64;

            bootstrap.Modal.getInstance(document.getElementById('cropperModal')).hide();
        });
    </script>
}
