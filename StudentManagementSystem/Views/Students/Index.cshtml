@model IEnumerable<StudentManagementSystem.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h1>Students</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus me-2"></i>Create New Student
    </a>
</p>
@if (TempData["SuccessMessage"] != null)
{
    <div id="undo-toast" class="toast align-items-center text-bg-success border-0 position-fixed bottom-0 end-0 m-4" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="7000">
        <div class="d-flex">
            <div class="toast-body">
                @Html.Raw(TempData["SuccessMessage"])
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
}
<table class="table table-hover table-striped align-middle">
    <thead>
        <tr>
            <th>
                <i class="fas fa-user me-2"></i>Full Name
            </th>
            <th>
                <i class="fas fa-calendar me-2"></i>Date of Birth
            </th>
            <th>
                <i class="fas fa-venus-mars me-2"></i>Gender
            </th>
            <th>
                <i class="fas fa-envelope me-2"></i>Email
            </th>
            <th>
                <i class="fas fa-phone me-2"></i>Phone
            </th>
            <th>
                <i class="fas fa-map-marker-alt me-2"></i>Address
            </th>
            <th>
                <i class="fas fa-image me-2"></i>Profile Picture
            </th>
            <th>
                <i class="fas fa-cogs me-2"></i>Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirth)
                </td>
                <td>
                    @EnumHelper.GetDisplayName(item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    <div class="d-flex align-items-center">
                        @if (!string.IsNullOrEmpty(item.ProfilePicture))
                        {
                            <img src="@Url.Content(item.ProfilePicture)"
                                 alt="Profile picture of @item.FullName"
                                 class="rounded-circle profile-img"
                                 style="width: 50px; height: 50px; object-fit: cover; box-shadow: 0 2px 4px rgba(0,0,0,0.1); border: 2px solid #fff;"
                                 title="Profile picture of @item.FullName" />
                        }
                        else
                        {
                            <div class="rounded-circle d-flex align-items-center justify-content-center text-muted profile-placeholder"
                                 style="width: 50px; height: 50px; background-color: #f8f9fa; border: 2px solid #dee2e6;"
                                 title="No profile picture available for @item.FullName">
                                <i class="fa-solid fa-user" style="font-size: 20px;"></i>
                            </div>
                        }
                    </div>
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <a asp-action="Details" asp-route-id="@item.StudentId" class="btn btn-sm btn-outline-info" title="View details of @item.FullName" aria-label="View details of @item.FullName">
                            <i class="fa-solid fa-eye"></i>
                        </a>
                        <a asp-action="Edit" asp-route-id="@item.StudentId" class="btn btn-sm btn-outline-primary" title="Edit @item.FullName" aria-label="Edit @item.FullName">
                            <i class="fa-solid fa-edit"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.StudentId" class="btn btn-sm btn-outline-danger" title="Delete @item.FullName" aria-label="Delete @item.FullName">
                            <i class="fa-solid fa-trash"></i>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<style>
    .btn-group .btn {
        transition: all 0.2s ease-in-out;
    }
    
    .btn-group .btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .table tbody tr:hover {
        background-color: rgba(0,123,255,0.05) !important;
    }
    
    .profile-img,
    .profile-placeholder {
        cursor: pointer;
        transition: transform 0.2s ease-in-out;
    }
    
    .profile-img:hover,
    .profile-placeholder:hover {
        transform: scale(1.1);
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var toastEl = document.getElementById('undo-toast');
            if (toastEl) {
                var toast = new bootstrap.Toast(toastEl);
                toast.show();
            }
        });
        function undoDeleteStudent() {
            fetch('@Url.Action("UndoDelete", "Students")', {
                method: 'POST',
                headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() }
            }).then(() => window.location.reload());
        }
    </script>
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
