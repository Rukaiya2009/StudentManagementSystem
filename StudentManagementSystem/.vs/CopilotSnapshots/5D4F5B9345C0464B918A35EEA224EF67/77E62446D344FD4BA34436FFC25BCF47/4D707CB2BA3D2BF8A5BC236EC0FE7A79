using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using System.Threading.Tasks;

namespace StudentManagementSystem.Areas.Identity.Pages.Account
{
    public class ConfirmEmailModel : PageModel
    {
        private readonly UserManager<IdentityUser> _userManager;

        public ConfirmEmailModel(UserManager<IdentityUser> userManager)
        {
            _userManager = userManager;
        }

        [BindProperty(SupportsGet = true)]
        public string? UserId { get; set; }

        [BindProperty(SupportsGet = true)]
        public string? Code { get; set; }

        public string? StatusMessage { get; set; }
        public bool IsConfirmed { get; private set; } = false;

        public void OnGet()
        {
            // Show the confirmation page with button
        }

        public async Task<IActionResult> OnPostAsync()
        {
            if (string.IsNullOrEmpty(UserId) || string.IsNullOrEmpty(Code))
            {
                StatusMessage = "Invalid confirmation request.";
                return Page();
            }

            var user = await _userManager.FindByIdAsync(UserId);
            if (user == null)
            {
                StatusMessage = $"Unable to load user with ID '{UserId}'.";
                return Page();
            }

            var result = await _userManager.ConfirmEmailAsync(user, Code);
            IsConfirmed = result.Succeeded;

            if (!IsConfirmed)
            {
                StatusMessage = "Error confirming your email.";
                return Page();
            }

            // Redirect to login with a success message
            return RedirectToPage("/Account/Login", new { area = "Identity", confirmed = true });
        }
    }
}
