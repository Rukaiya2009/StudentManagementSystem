using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using System.Threading.Tasks;

public class ConfirmEmailModel : PageModel
{
    private readonly UserManager<IdentityUser> _userManager;

    public ConfirmEmailModel(UserManager<IdentityUser> userManager)
    {
        _userManager = userManager;
    }

    [BindProperty(SupportsGet = true)]
    public required string UserId { get; set; }

    [BindProperty(SupportsGet = true)]
    public required string Code { get; set; }

    public bool IsConfirmed { get; private set; } = false;

    public void OnGet()
    {
        // Show the confirmation page with button
    }

    public async Task<IActionResult> OnPostAsync()
    {
        if (UserId == null || Code == null)
            return RedirectToPage("/Index");

        var user = await _userManager.FindByIdAsync(UserId);
        if (user == null)
            return NotFound($"Unable to load user with ID '{UserId}'.");

        var result = await _userManager.ConfirmEmailAsync(user, Code);
        IsConfirmed = result.Succeeded;

        if (!IsConfirmed)
        {
            ModelState.AddModelError(string.Empty, "Error confirming your email.");
            return Page();
        }

        // Redirect to login with a success message
        return RedirectToPage("/Account/Login", new { area = "Identity", confirmed = true });
    }
}
