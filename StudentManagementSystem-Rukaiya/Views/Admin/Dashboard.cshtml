@model IEnumerable<Microsoft.AspNetCore.Identity.IdentityUser>
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var labels = ViewBag.PaymentLabels as List<string>;
    var amounts = ViewBag.PaymentAmounts as List<decimal>;
}

<h2 class="mt-4 mb-4">Admin Dashboard</h2>

<div class="row">
    <div class="col-md-3 mb-4">
        <div class="card text-center shadow-sm border-0">
            <div class="card-body">
                <h6 class="text-muted">Students</h6>
                <h2>@ViewBag.TotalStudents</h2>
                <a asp-controller="Students" asp-action="Index" class="btn btn-sm btn-outline-primary mt-2">Manage</a>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-4">
        <div class="card text-center shadow-sm border-0">
            <div class="card-body">
                <h6 class="text-muted">Teachers</h6>
                <h2>@ViewBag.TotalTeachers</h2>
                <a asp-controller="Teachers" asp-action="Index" class="btn btn-sm btn-outline-primary mt-2">Manage</a>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-4">
        <div class="card text-center shadow-sm border-0">
            <div class="card-body">
                <h6 class="text-muted">Courses</h6>
                <h2>@ViewBag.TotalCourses</h2>
                <a asp-controller="Courses" asp-action="Index" class="btn btn-sm btn-outline-primary mt-2">Manage</a>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-4">
        <div class="card text-center shadow-sm border-0 bg-light">
            <div class="card-body">
                <h6 class="text-muted">Departments</h6>
                <h2>@ViewBag.TotalDepartments</h2>
            </div>
        </div>
    </div>

    <div class="col-md-3 mb-4">
        <div class="card text-center shadow-sm border-0 bg-success text-white">
            <div class="card-body">
                <h6>Confirmed Payments</h6>
                <h2>@ViewBag.TotalConfirmedPayments</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-4">
        <div class="card text-center shadow-sm border-0 bg-warning text-dark">
            <div class="card-body">
                <h6>Pending Payments</h6>
                <h2>@ViewBag.TotalPendingPayments</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-4">
        <div class="card text-center shadow-sm border-0 bg-info text-white">
            <div class="card-body">
                <h6>Total Payments</h6>
                <h2>@ViewBag.TotalPayments</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb-4">
        <div class="card text-center shadow-sm border-0 bg-primary text-white">
            <div class="card-body">
                <h6>Amount Received</h6>
                <h2>@(((decimal)ViewBag.TotalAmountReceived).ToString("C"))</h2>
            </div>
        </div>
    </div>
</div>

<!-- Monthly Income Chart -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-dark text-white">
        <h5 class="mb-0">Monthly Income (Last 6 Months)</h5>
    </div>
    <div class="card-body">
        <canvas id="monthlyIncomeChart" style="max-height: 350px;"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var ctx = document.getElementById('monthlyIncomeChart').getContext('2d');
    var chart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(labels)),
            datasets: [{
                label: 'Amount Received',
                backgroundColor: 'rgba(54, 162, 235, 0.7)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1,
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(amounts))
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function (value) {
                            return '$' + value.toFixed(2);
                        }
                    }
                }
            }
        }
    });
</script>
